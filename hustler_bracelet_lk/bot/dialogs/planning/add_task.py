import datetime
from datetime import date

from aiogram import types
from aiogram_dialog import Dialog, Window, DialogManager, ChatEvent
from aiogram_dialog.widgets.input import TextInput, ManagedTextInput
from aiogram_dialog.widgets.kbd import Cancel, Calendar, ManagedCalendar, CalendarConfig, Back
from aiogram_dialog.widgets.text import Const, Format, Jinja

from hustler_bracelet.bot.dialogs import states
from hustler_bracelet.bot.dialogs.widgets import Today
from hustler_bracelet.managers import FinanceManager


async def on_name_for_new_task_entered(
        message: types.Message,
        widget: ManagedTextInput,
        dialog_manager: DialogManager,
        data: str
):
    dialog_manager.dialog_data['name'] = message.text
    await dialog_manager.next()


async def on_date_clicked(
        callback: ChatEvent,
        widget: ManagedCalendar | None,
        manager: DialogManager,
        selected_date: date
):
    finance_manager: FinanceManager = manager.middleware_data['finance_manager']

    manager.dialog_data['date'] = selected_date

    await finance_manager.add_task(
        name=manager.dialog_data['name'],
        planned_complete_date=selected_date
    )

    await manager.next()


add_task_dialog = Dialog(
    Window(
        Const(
            '‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏</b>\n'
            '\n'
            '–ö–∞–∫—É—é –∑–∞–¥–∞—á—É —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å?'
        ),
        TextInput(
            id='enter_name_for_new_task',
            on_success=on_name_for_new_task_entered
        ),
        Cancel(Const('‚ùå –û—Ç–º–µ–Ω–∞')),
        state=states.AddTask.MAIN
    ),
    Window(
        Const(
            '‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏</b>\n'
            '\n'
            '–ö–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É?'
        ),
        Calendar(
            id='tasks_calendar',
            on_click=on_date_clicked,
            config=CalendarConfig(
                min_date=datetime.date.today()
            )
        ),
        Today(on_date_clicked),
        Back(Const('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')),
        state=states.AddTask.GET_DATE
    ),
    Window(
        Jinja(
            '‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏</b>\n'
            '\n'
            '‚úÖ –ó–∞–¥–∞—á–∞ ‚Äú{{ dialog_data[\'name\'] }}‚Äù –Ω–∞ {{ dialog_data[\'date\']|date }} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.'
        ),
        Cancel(Const('üëå –û–∫')),
        state=states.AddTask.FINAL
    )
)
