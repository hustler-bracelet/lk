from datetime import timedelta
from typing import Sequence

from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Row, Start, Cancel
from aiogram_dialog.widgets.text import Const, Jinja

from hustler_bracelet.bot.dialogs import states
from hustler_bracelet.bot.dialogs.finance.add_event import on_start_add_event_dialog_click
from hustler_bracelet.database.asset import Asset
from hustler_bracelet.enums import FinanceTransactionType
from hustler_bracelet.managers.finance_manager import FinanceManager


async def finance_menu_getter(dialog_manager: DialogManager, **kwargs):
    finance_manager: FinanceManager = dialog_manager.middleware_data['finance_manager']

    balance = await finance_manager.get_balance()
    mp_income_category_name, mp_income_category_balance = await finance_manager.get_most_profitable_income_category()
    mp_spendings_category_name, mp_spendings_category_balance = await finance_manager.get_most_spending_category()

    sua_income_today, oc_income_today = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.INCOME,
        until_date=timedelta(0)
    )
    sua_income_week, oc_income_week = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.INCOME,
        until_date=timedelta(7)
    )
    sua_income_month, oc_income_month = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.INCOME,
        until_date=timedelta(30)
    )

    sua_spendings_today, oc_spendings_today = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.SPENDING,
        until_date=timedelta(0)
    )
    sua_spendings_week, oc_spendings_week = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.SPENDING,
        until_date=timedelta(7)
    )
    sua_spendings_month, oc_spendings_month = await finance_manager.get_stats_for_time_range(
        type_=FinanceTransactionType.SPENDING,
        until_date=timedelta(30)
    )

    assets: Sequence[Asset] = await finance_manager.get_all_assets()

    return {
        'balance': balance,
        'mp_income_category_name': mp_income_category_name,
        'mp_income_category_balance': mp_income_category_balance,
        'mp_spendings_category_name': mp_spendings_category_name,
        'mp_spendings_category_balance': mp_spendings_category_balance,

        'sua_income_today': sua_income_today,
        'oc_income_today': oc_income_today,
        'sua_income_week': sua_income_week,
        'oc_income_week': oc_income_week,
        'sua_income_month': sua_income_month,
        'oc_income_month': oc_income_month,

        'sua_spendings_today': sua_spendings_today,
        'oc_spendings_today': oc_spendings_today,
        'sua_spendings_week': sua_spendings_week,
        'oc_spendings_week': oc_spendings_week,
        'sua_spendings_month': sua_spendings_month,
        'oc_spendings_month': oc_spendings_month,

        'assets': {
            asset.name:
                (asset.current_amount, asset.interest_rate, asset.current_amount - asset.base_amount)
            for asset in assets
        }
    }


finance_menu_dialog = Dialog(
    Window(
        Jinja(
            '\n'
            'üí∏ <b>–§–∏–Ω–∞–Ω—Å—ã</b>\n'
            '\n'
            'üíµ <b>–¢–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª:</b> {{ balance|money }}\n'
            '\n'
            '<b>‚Üó –î–æ—Ö–æ–¥—ã:</b>\n'
            '<b>‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è:</b> {{ sua_income_today|money }} ({{ oc_income_today|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '<b>‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é:</b> {{ sua_income_week|money }} ({{ oc_income_week|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '<b>‚Ä¢ –ó–∞ –º–µ—Å—è—Ü:</b> {{ sua_income_month|money }} ({{ oc_income_month|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '\n'
            '<b>‚ÜôÔ∏è –†–∞—Å—Ö–æ–¥—ã:</b>\n' 
            '<b>‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è:</b> {{ sua_spendings_today|money }} ({{ oc_spendings_today|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '<b>‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é:</b> {{ sua_spendings_week|money }} ({{ oc_spendings_week|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '<b>‚Ä¢ –ó–∞ –º–µ—Å—è—Ü:</b> {{ sua_spendings_month|money }} ({{ oc_spendings_month|plural(["–æ–ø–µ—Ä–∞—Ü–∏—è", "–æ–ø–µ—Ä–∞—Ü–∏–∏", "–æ–ø–µ—Ä–∞—Ü–∏–π"]) }})\n'
            '\n'
            'üìà <b>–¢–≤–æ–∏ –∞–∫—Ç–∏–≤—ã:</b>\n'
            '{% for name, details in assets.items() %}'
            ' ‚Ä¢  <b>{{ name }}:</b> {{ details[0]|money }}'
            '{% if details[1] is not none %} ({{ details[1]|number }}%, –ø—Ä–∏–±—ã–ª—å: {{ details[2]|money }})\n'
            '{% else %} (–ø—Ä–∏–±—ã–ª—å: {{ details[2]|money }}‚ÇΩ)\n'
            '{% endif %}'
            '{% endfor %}\n'
            '\n'
            'ü§ë –°–∞–º—ã–π –±–æ–ª—å—à–æ–π –¥–æ—Ö–æ–¥ —É —Ç–µ–±—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n'
            '<b>{{ mp_income_category_name}}</b> ({{ mp_income_category_balance|money }})\n'
            '\n'
            'üí≥ –ê –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n'
            '<b>{{ mp_spendings_category_name }}</b> ({{ mp_spendings_category_balance|money }})\n'
        ),
        Row(
            Start(
                text=Const('ü§ë –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥'),
                id='add_income',
                state=states.AddFinanceEvent.MAIN,
                data={'event_type': FinanceTransactionType.INCOME}
            ),
            Start(
                text=Const('üí≥ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥'),
                id='add_spend',
                state=states.AddFinanceEvent.MAIN,
                data={'event_type': FinanceTransactionType.SPENDING},
            ),
        ),
        Start(
            text=Const('üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'),
            id='categories_management_menu',
            state=states.FinanceCategoriesManagementMenu.MAIN
        ),
        Start(
            text=Const('üïî –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π'),
            id='list_finance_events_menu',
            state=states.FinanceEventsListMenu.MAIN
        ),
        Start(
            text=Const('üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ Œ≤'),
            id='investments_management_menu',
            state=states.FinanceInvestmentsMenu.MAIN
        ),
        Cancel(Const('‚ùå –û—Ç–º–µ–Ω–∞')),

        state=states.FinanceMainMenu.MAIN,
        getter=finance_menu_getter
    )
)
